@model SubCategoryListModel


<div class="row">
    <div class="col col-lg-12">

        @if (Model != null && Model.SubCategories != null && Model.SubCategories.Count() > 0)
        {
            <div class="panel panel-default">

                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="text-center thead-active">
                                <tr class="">
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Categories Name</th>
                                    <th>Publication Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var subCategory in Model.SubCategories)
                                {

                                    <tr class="success text-center">
                                        <td>@subCategory.Name</td>
                                        <td>@subCategory.Description</td>
                                        
                                        <td>
                                            @string.Join(",",subCategory.Categories.Select(x=>x.Name));
                                            @*@{var comma = false;
                                                foreach (var category in subCategory.Categories)
                                                {
                                                    if (comma)
                                                    {
                                                        <span>,</span>
                                                    }
                                                    <span>@category.Name</span>

                                                    comma = true;
                                                }
                                              }*@
                                        </td>
                                        <td>@(subCategory.PublicationStatus == true ? "Active" : "Deactive")</td>
                                        <td class="embed-responsive-item">
                                            <button class="show btn btn-gradient-primary float-lg-left fa m-1" data-href="@Url.Action("Action", "SubCategory" ,new { ID=subCategory.ID,pageNo=Model.Pager.CurrentPage})" data-toggle="modal" data-target="#myModal"><i class="fa fa-pencil-square-o mr-1"></i>Edit</button>
                                            <button class="show btn btn-gradient-danger float-lg-left fa m-1" data-href="@Url.Action("Delete", "SubCategory" ,new { ID=subCategory.ID})" data-toggle="modal" data-target="#myModal"><i class="fa fa-trash-o mr-1"></i>Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                Sorry! NO records exist.
            </div>
        }

        @if (Model.Pager!=null && Model.Pager.TotalItems>Model.Pager.PageSize)
        {
            <nav class="pagination-wrap  justify-content-center mr-40 mt-15" aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item @(Model.Pager.CurrentPage<=Model.Pager.StartPage?"disabled":string.Empty)"><button type="button" class="page-link" href="@Url.Action("Listing","SubCategory",new { searchTerm=Model.SearchTerm,categoryId=Model.CategoryId,pageNo=Model.Pager.CurrentPage-1})">Previous</button></li>
                    @for (int page = 1; page <= Model.Pager.TotalPages; page++)
                    {
                        <li class="page-item @(Model.Pager.CurrentPage==page?"disabled active active-violet":string.Empty)"><button type="button" class="page-link" href="@Url.Action("Listing","SubCategory",new { searchterm = Model.SearchTerm, categoryId = Model.CategoryId, pageNo = page })">@page</button></li>
                    }
                    <li class="page-item @(Model.Pager.CurrentPage>=Model.Pager.EndPage?"disabled":string.Empty)"><button type="button" class="page-link" href="@Url.Action("Listing","SubCategory",new { searchTerm=Model.SearchTerm,categoryId=Model.CategoryId,pageNo=Model.Pager.CurrentPage+1})">Next</button></li>
                </ul>
            </nav>
        }

    </div>

</div>
<script>
    $(".page-link").click(function () {
        $.ajax({
            url: $(this).attr("href"),
            type:'get'
        }).done(function (response) {
             $('#table').html('');
             $('#table').html(response);
        }).fail(function (XHLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });

    $(".show").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
            async: false,
            cache: false

        }).done(function (response) {
            $("#myModal .modal-dialog").html(response);
        }).fail(function (XHLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
        
            //$("#input_tags").val([1, 3]).change();
    });
</script>